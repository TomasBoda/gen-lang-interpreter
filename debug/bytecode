BYTECODE
------------------------------
func merge(var left, var right) {
------------------------------
0: (line 1) LOAD_CONST
1: (line 1) 0
2: (line 1) 0
3: (line 1) FUNC_DEF
4: (line 1) LOAD_CONST
5: (line 1) 1
6: (line 1) 0
7: (line 1) STORE_VAR
8: (line 1) LOAD_CONST
9: (line 1) 2
10: (line 1) 0
11: (line 1) STORE_VAR
------------------------------
var result = [];
------------------------------
12: (line 2) LOAD_CONST
13: (line 2) 3
14: (line 2) 0
15: (line 2) ARRAY_DEF
16: (line 2) LOAD_CONST
17: (line 2) 4
18: (line 2) 0
19: (line 2) STORE_VAR
------------------------------
var i = 0;
------------------------------
20: (line 3) LOAD_CONST
21: (line 3) 5
22: (line 3) 0
23: (line 3) LOAD_CONST
24: (line 3) 6
25: (line 3) 0
26: (line 3) STORE_VAR
------------------------------
var j = 0;
------------------------------
27: (line 4) LOAD_CONST
28: (line 4) 7
29: (line 4) 0
30: (line 4) LOAD_CONST
31: (line 4) 8
32: (line 4) 0
33: (line 4) STORE_VAR
------------------------------
while (i < |left| and j < |right|) {
------------------------------
34: (line 6) LOAD_CONST
35: (line 6) 9
36: (line 6) 0
37: (line 6) LOAD_VAR
38: (line 6) LOAD_CONST
39: (line 6) 10
40: (line 6) 0
41: (line 6) LOAD_VAR
42: (line 6) SIZEOF
43: (line 6) CMP_LT
44: (line 6) LOAD_CONST
45: (line 6) 11
46: (line 6) 0
47: (line 6) LOAD_VAR
48: (line 6) LOAD_CONST
49: (line 6) 12
50: (line 6) 0
51: (line 6) LOAD_VAR
52: (line 6) SIZEOF
53: (line 6) CMP_LT
54: (line 6) AND
55: (line 6) LOAD_CONST
56: (line 6) 37
57: (line 6) 0
58: (line 6) JUMP_IF_FALSE
------------------------------
if (left[i] < right[j]) {
------------------------------
59: (line 7) LOAD_CONST
60: (line 7) 14
61: (line 7) 0
62: (line 7) LOAD_VAR
63: (line 7) LOAD_CONST
64: (line 7) 15
65: (line 7) 0
66: (line 7) LOAD_VAR
67: (line 7) ARRAY_GET
68: (line 7) LOAD_CONST
69: (line 7) 16
70: (line 7) 0
71: (line 7) LOAD_VAR
72: (line 7) LOAD_CONST
73: (line 7) 17
74: (line 7) 0
75: (line 7) LOAD_VAR
76: (line 7) ARRAY_GET
77: (line 7) CMP_LT
78: (line 7) LOAD_CONST
79: (line 7) 27
80: (line 7) 0
81: (line 7) JUMP_IF_FALSE
------------------------------
result = result + left[i];
------------------------------
82: (line 8) LOAD_CONST
83: (line 8) 19
84: (line 8) 0
85: (line 8) LOAD_VAR
86: (line 8) LOAD_CONST
87: (line 8) 20
88: (line 8) 0
89: (line 8) LOAD_VAR
90: (line 8) LOAD_CONST
91: (line 8) 21
92: (line 8) 0
93: (line 8) LOAD_VAR
94: (line 8) ARRAY_GET
95: (line 8) ADD
96: (line 8) LOAD_CONST
97: (line 8) 22
98: (line 8) 0
99: (line 8) STORE_VAR
------------------------------
i = i + 1;
------------------------------
100: (line 9) LOAD_CONST
101: (line 9) 23
102: (line 9) 0
103: (line 9) LOAD_VAR
104: (line 9) LOAD_CONST
105: (line 9) 24
106: (line 9) 0
107: (line 9) ADD
108: (line 9) LOAD_CONST
109: (line 9) 25
110: (line 9) 0
111: (line 9) STORE_VAR
------------------------------
} else {
------------------------------
112: (line 10) LOAD_CONST
113: (line 10) 35
114: (line 10) 0
115: (line 10) JUMP
------------------------------
result = result + right[j];
------------------------------
116: (line 11) LOAD_CONST
117: (line 11) 28
118: (line 11) 0
119: (line 11) LOAD_VAR
120: (line 11) LOAD_CONST
121: (line 11) 29
122: (line 11) 0
123: (line 11) LOAD_VAR
124: (line 11) LOAD_CONST
125: (line 11) 30
126: (line 11) 0
127: (line 11) LOAD_VAR
128: (line 11) ARRAY_GET
129: (line 11) ADD
130: (line 11) LOAD_CONST
131: (line 11) 31
132: (line 11) 0
133: (line 11) STORE_VAR
------------------------------
j = j + 1;
------------------------------
134: (line 12) LOAD_CONST
135: (line 12) 32
136: (line 12) 0
137: (line 12) LOAD_VAR
138: (line 12) LOAD_CONST
139: (line 12) 33
140: (line 12) 0
141: (line 12) ADD
142: (line 12) LOAD_CONST
143: (line 12) 34
144: (line 12) 0
145: (line 12) STORE_VAR
------------------------------
}
------------------------------
146: (line 14) LOAD_CONST
147: (line 14) 36
148: (line 14) 0
149: (line 14) JUMP
------------------------------
while (i < |left|) {
------------------------------
150: (line 16) LOAD_CONST
151: (line 16) 38
152: (line 16) 0
153: (line 16) LOAD_VAR
154: (line 16) LOAD_CONST
155: (line 16) 39
156: (line 16) 0
157: (line 16) LOAD_VAR
158: (line 16) SIZEOF
159: (line 16) CMP_LT
160: (line 16) LOAD_CONST
161: (line 16) 49
162: (line 16) 0
163: (line 16) JUMP_IF_FALSE
------------------------------
result = result + left[i];
------------------------------
164: (line 17) LOAD_CONST
165: (line 17) 41
166: (line 17) 0
167: (line 17) LOAD_VAR
168: (line 17) LOAD_CONST
169: (line 17) 42
170: (line 17) 0
171: (line 17) LOAD_VAR
172: (line 17) LOAD_CONST
173: (line 17) 43
174: (line 17) 0
175: (line 17) LOAD_VAR
176: (line 17) ARRAY_GET
177: (line 17) ADD
178: (line 17) LOAD_CONST
179: (line 17) 44
180: (line 17) 0
181: (line 17) STORE_VAR
------------------------------
i = i + 1;
------------------------------
182: (line 18) LOAD_CONST
183: (line 18) 45
184: (line 18) 0
185: (line 18) LOAD_VAR
186: (line 18) LOAD_CONST
187: (line 18) 46
188: (line 18) 0
189: (line 18) ADD
190: (line 18) LOAD_CONST
191: (line 18) 47
192: (line 18) 0
193: (line 18) STORE_VAR
------------------------------
}
------------------------------
194: (line 19) LOAD_CONST
195: (line 19) 48
196: (line 19) 0
197: (line 19) JUMP
------------------------------
while (j < |right|) {
------------------------------
198: (line 21) LOAD_CONST
199: (line 21) 50
200: (line 21) 0
201: (line 21) LOAD_VAR
202: (line 21) LOAD_CONST
203: (line 21) 51
204: (line 21) 0
205: (line 21) LOAD_VAR
206: (line 21) SIZEOF
207: (line 21) CMP_LT
208: (line 21) LOAD_CONST
209: (line 21) 61
210: (line 21) 0
211: (line 21) JUMP_IF_FALSE
------------------------------
result = result + right[j];
------------------------------
212: (line 22) LOAD_CONST
213: (line 22) 53
214: (line 22) 0
215: (line 22) LOAD_VAR
216: (line 22) LOAD_CONST
217: (line 22) 54
218: (line 22) 0
219: (line 22) LOAD_VAR
220: (line 22) LOAD_CONST
221: (line 22) 55
222: (line 22) 0
223: (line 22) LOAD_VAR
224: (line 22) ARRAY_GET
225: (line 22) ADD
226: (line 22) LOAD_CONST
227: (line 22) 56
228: (line 22) 0
229: (line 22) STORE_VAR
------------------------------
j = j + 1;
------------------------------
230: (line 23) LOAD_CONST
231: (line 23) 57
232: (line 23) 0
233: (line 23) LOAD_VAR
234: (line 23) LOAD_CONST
235: (line 23) 58
236: (line 23) 0
237: (line 23) ADD
238: (line 23) LOAD_CONST
239: (line 23) 59
240: (line 23) 0
241: (line 23) STORE_VAR
------------------------------
}
------------------------------
242: (line 24) LOAD_CONST
243: (line 24) 60
244: (line 24) 0
245: (line 24) JUMP
------------------------------
return result;
------------------------------
246: (line 26) LOAD_CONST
247: (line 26) 62
248: (line 26) 0
249: (line 26) LOAD_VAR
250: (line 26) RETURN
------------------------------
}
------------------------------
251: (line 27) LOAD_CONST
252: (line 27) 63
253: (line 27) 0
254: (line 27) RETURN
255: (line 27) FUNC_END
------------------------------
func merge_sort(var array) {
------------------------------
256: (line 29) LOAD_CONST
257: (line 29) 64
258: (line 29) 0
259: (line 29) FUNC_DEF
260: (line 29) LOAD_CONST
261: (line 29) 65
262: (line 29) 0
263: (line 29) STORE_VAR
------------------------------
if (|array| <= 1) {
------------------------------
264: (line 30) LOAD_CONST
265: (line 30) 66
266: (line 30) 0
267: (line 30) LOAD_VAR
268: (line 30) SIZEOF
269: (line 30) LOAD_CONST
270: (line 30) 67
271: (line 30) 0
272: (line 30) CMP_LE
273: (line 30) LOAD_CONST
274: (line 30) 70
275: (line 30) 0
276: (line 30) JUMP_IF_FALSE
------------------------------
return array;
------------------------------
277: (line 31) LOAD_CONST
278: (line 31) 69
279: (line 31) 0
280: (line 31) LOAD_VAR
281: (line 31) RETURN
------------------------------
var center = |array| // 2;
------------------------------
282: (line 34) LOAD_CONST
283: (line 34) 71
284: (line 34) 0
285: (line 34) LOAD_VAR
286: (line 34) SIZEOF
287: (line 34) LOAD_CONST
288: (line 34) 72
289: (line 34) 0
290: (line 34) DIV_FLOOR
291: (line 34) LOAD_CONST
292: (line 34) 73
293: (line 34) 0
294: (line 34) STORE_VAR
------------------------------
var left = [];
------------------------------
295: (line 36) LOAD_CONST
296: (line 36) 74
297: (line 36) 0
298: (line 36) ARRAY_DEF
299: (line 36) LOAD_CONST
300: (line 36) 75
301: (line 36) 0
302: (line 36) STORE_VAR
------------------------------
var right = [];
------------------------------
303: (line 37) LOAD_CONST
304: (line 37) 76
305: (line 37) 0
306: (line 37) ARRAY_DEF
307: (line 37) LOAD_CONST
308: (line 37) 77
309: (line 37) 0
310: (line 37) STORE_VAR
------------------------------
var i = 0;
------------------------------
311: (line 39) LOAD_CONST
312: (line 39) 78
313: (line 39) 0
314: (line 39) LOAD_CONST
315: (line 39) 79
316: (line 39) 0
317: (line 39) STORE_VAR
------------------------------
while (i < center) {
------------------------------
318: (line 40) LOAD_CONST
319: (line 40) 80
320: (line 40) 0
321: (line 40) LOAD_VAR
322: (line 40) LOAD_CONST
323: (line 40) 81
324: (line 40) 0
325: (line 40) LOAD_VAR
326: (line 40) CMP_LT
327: (line 40) LOAD_CONST
328: (line 40) 91
329: (line 40) 0
330: (line 40) JUMP_IF_FALSE
------------------------------
left = left + array[i];
------------------------------
331: (line 41) LOAD_CONST
332: (line 41) 83
333: (line 41) 0
334: (line 41) LOAD_VAR
335: (line 41) LOAD_CONST
336: (line 41) 84
337: (line 41) 0
338: (line 41) LOAD_VAR
339: (line 41) LOAD_CONST
340: (line 41) 85
341: (line 41) 0
342: (line 41) LOAD_VAR
343: (line 41) ARRAY_GET
344: (line 41) ADD
345: (line 41) LOAD_CONST
346: (line 41) 86
347: (line 41) 0
348: (line 41) STORE_VAR
------------------------------
i = i + 1;
------------------------------
349: (line 42) LOAD_CONST
350: (line 42) 87
351: (line 42) 0
352: (line 42) LOAD_VAR
353: (line 42) LOAD_CONST
354: (line 42) 88
355: (line 42) 0
356: (line 42) ADD
357: (line 42) LOAD_CONST
358: (line 42) 89
359: (line 42) 0
360: (line 42) STORE_VAR
------------------------------
}
------------------------------
361: (line 43) LOAD_CONST
362: (line 43) 90
363: (line 43) 0
364: (line 43) JUMP
------------------------------
while (i < |array|) {
------------------------------
365: (line 45) LOAD_CONST
366: (line 45) 92
367: (line 45) 0
368: (line 45) LOAD_VAR
369: (line 45) LOAD_CONST
370: (line 45) 93
371: (line 45) 0
372: (line 45) LOAD_VAR
373: (line 45) SIZEOF
374: (line 45) CMP_LT
375: (line 45) LOAD_CONST
376: (line 45) 103
377: (line 45) 0
378: (line 45) JUMP_IF_FALSE
------------------------------
right = right + array[i];
------------------------------
379: (line 46) LOAD_CONST
380: (line 46) 95
381: (line 46) 0
382: (line 46) LOAD_VAR
383: (line 46) LOAD_CONST
384: (line 46) 96
385: (line 46) 0
386: (line 46) LOAD_VAR
387: (line 46) LOAD_CONST
388: (line 46) 97
389: (line 46) 0
390: (line 46) LOAD_VAR
391: (line 46) ARRAY_GET
392: (line 46) ADD
393: (line 46) LOAD_CONST
394: (line 46) 98
395: (line 46) 0
396: (line 46) STORE_VAR
------------------------------
i = i + 1;
------------------------------
397: (line 47) LOAD_CONST
398: (line 47) 99
399: (line 47) 0
400: (line 47) LOAD_VAR
401: (line 47) LOAD_CONST
402: (line 47) 100
403: (line 47) 0
404: (line 47) ADD
405: (line 47) LOAD_CONST
406: (line 47) 101
407: (line 47) 0
408: (line 47) STORE_VAR
------------------------------
}
------------------------------
409: (line 48) LOAD_CONST
410: (line 48) 102
411: (line 48) 0
412: (line 48) JUMP
------------------------------
var left_sorted = merge_sort(left);
------------------------------
413: (line 50) LOAD_CONST
414: (line 50) 104
415: (line 50) 0
416: (line 50) LOAD_VAR
417: (line 50) LOAD_CONST
418: (line 50) 105
419: (line 50) 0
420: (line 50) LOAD_VAR
421: (line 50) LOAD_CONST
422: (line 50) 106
423: (line 50) 0
424: (line 50) CALL
425: (line 50) LOAD_CONST
426: (line 50) 107
427: (line 50) 0
428: (line 50) STORE_VAR
------------------------------
var right_sorted = merge_sort(right);
------------------------------
429: (line 51) LOAD_CONST
430: (line 51) 108
431: (line 51) 0
432: (line 51) LOAD_VAR
433: (line 51) LOAD_CONST
434: (line 51) 109
435: (line 51) 0
436: (line 51) LOAD_VAR
437: (line 51) LOAD_CONST
438: (line 51) 110
439: (line 51) 0
440: (line 51) CALL
441: (line 51) LOAD_CONST
442: (line 51) 111
443: (line 51) 0
444: (line 51) STORE_VAR
------------------------------
return merge(left_sorted, right_sorted);
------------------------------
445: (line 53) LOAD_CONST
446: (line 53) 112
447: (line 53) 0
448: (line 53) LOAD_VAR
449: (line 53) LOAD_CONST
450: (line 53) 113
451: (line 53) 0
452: (line 53) LOAD_VAR
453: (line 53) LOAD_CONST
454: (line 53) 114
455: (line 53) 0
456: (line 53) LOAD_VAR
457: (line 53) LOAD_CONST
458: (line 53) 115
459: (line 53) 0
460: (line 53) CALL
461: (line 53) RETURN
------------------------------
}
------------------------------
462: (line 54) LOAD_CONST
463: (line 54) 116
464: (line 54) 0
465: (line 54) RETURN
466: (line 54) FUNC_END
------------------------------
func main() {
------------------------------
467: (line 56) LOAD_CONST
468: (line 56) 117
469: (line 56) 0
470: (line 56) FUNC_DEF
------------------------------
var array = [8, 1, 7, 3, 12, 11, 6, 5, 2, 9, 4, 10];
------------------------------
471: (line 57) LOAD_CONST
472: (line 57) 118
473: (line 57) 0
474: (line 57) LOAD_CONST
475: (line 57) 119
476: (line 57) 0
477: (line 57) LOAD_CONST
478: (line 57) 120
479: (line 57) 0
480: (line 57) LOAD_CONST
481: (line 57) 121
482: (line 57) 0
483: (line 57) LOAD_CONST
484: (line 57) 122
485: (line 57) 0
486: (line 57) LOAD_CONST
487: (line 57) 123
488: (line 57) 0
489: (line 57) LOAD_CONST
490: (line 57) 124
491: (line 57) 0
492: (line 57) LOAD_CONST
493: (line 57) 125
494: (line 57) 0
495: (line 57) LOAD_CONST
496: (line 57) 126
497: (line 57) 0
498: (line 57) LOAD_CONST
499: (line 57) 127
500: (line 57) 0
501: (line 57) LOAD_CONST
502: (line 57) 128
503: (line 57) 0
504: (line 57) LOAD_CONST
505: (line 57) 129
506: (line 57) 0
507: (line 57) LOAD_CONST
508: (line 57) 130
509: (line 57) 0
510: (line 57) ARRAY_DEF
511: (line 57) LOAD_CONST
512: (line 57) 131
513: (line 57) 0
514: (line 57) STORE_VAR
------------------------------
var sorted_array = merge_sort(array);
------------------------------
515: (line 58) LOAD_CONST
516: (line 58) 132
517: (line 58) 0
518: (line 58) LOAD_VAR
519: (line 58) LOAD_CONST
520: (line 58) 133
521: (line 58) 0
522: (line 58) LOAD_VAR
523: (line 58) LOAD_CONST
524: (line 58) 134
525: (line 58) 0
526: (line 58) CALL
527: (line 58) LOAD_CONST
528: (line 58) 135
529: (line 58) 0
530: (line 58) STORE_VAR
------------------------------
print sorted_array;
------------------------------
531: (line 60) LOAD_CONST
532: (line 60) 136
533: (line 60) 0
534: (line 60) LOAD_VAR
535: (line 60) PRINT
------------------------------
}
------------------------------
536: (line 61) LOAD_CONST
537: (line 61) 137
538: (line 61) 0
539: (line 61) RETURN
540: (line 61) FUNC_END
------------------------------
